{"ast":null,"code":"import _slicedToArray from \"/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/src/components/NewGoal/NewGoal.js\";\nimport React, { useState } from 'react';\nexport const NewGoal = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        enteredText = _useState2[0],\n        setEnteredText = _useState2[1];\n\n  const addGoalButtonHandler = e => {\n    // Prevents broswer default submit of sending form data to back end\n    e.preventDefault(); // Create new goal to add to list\n\n    const newGoal = {\n      id: Math.random().toString(),\n      task: enteredText\n    };\n    console.log(newGoal); // Use function from parent to add it to goal items data\n\n    props.onAddGoal(newGoal); // Set input value back to empty string\n\n    setEnteredText('');\n  };\n\n  const textChangedHandler = event => {\n    // Rerenders component with latest user input on each keystroke\n    setEnteredText(event.target.value);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"new-goal\",\n    onSubmit: addGoalButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: textChangedHandler,\n    value: enteredText,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Add Goal \"));\n};","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/src/components/NewGoal/NewGoal.js"],"names":["React","useState","NewGoal","props","enteredText","setEnteredText","addGoalButtonHandler","e","preventDefault","newGoal","id","Math","random","toString","task","console","log","onAddGoal","textChangedHandler","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA,oBAEQF,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAEvBG,WAFuB;AAAA,QAEVC,cAFU;;AAI9B,QAAMC,oBAAoB,GAAIC,CAAD,IAAO;AAEhC;AACAA,IAAAA,CAAC,CAACC,cAAF,GAHgC,CAKhC;;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADQ;AAEZC,MAAAA,IAAI,EAAEV;AAFM,KAAhB;AAKAW,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAXgC,CAahC;;AACAN,IAAAA,KAAK,CAACc,SAAN,CAAgBR,OAAhB,EAdgC,CAgBhC;;AACAJ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH,GAlBD;;AAoBA,QAAMa,kBAAkB,GAAIC,KAAD,IAAW;AAElC;AACAd,IAAAA,cAAc,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAEH,GALD;;AAQA,SACI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,QAAQ,EAAEf,oBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AACI,IAAA,QAAQ,EAAEY,kBADd;AAEI,IAAA,KAAK,EAAEd,WAFX;AAGI,IAAA,IAAI,EAAC,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CADJ;AAWH,CA3CM","sourcesContent":["import React, { useState } from 'react'\n\nexport const NewGoal = (props) => {\n\n    const [enteredText, setEnteredText] = useState('');\n\n    const addGoalButtonHandler = (e) => {\n\n        // Prevents broswer default submit of sending form data to back end\n        e.preventDefault();\n\n        // Create new goal to add to list\n        const newGoal = {\n            id: Math.random().toString(),\n            task: enteredText\n        }\n\n        console.log(newGoal)\n\n        // Use function from parent to add it to goal items data\n        props.onAddGoal(newGoal)\n\n        // Set input value back to empty string\n        setEnteredText('')\n    }\n\n    const textChangedHandler = (event) => {\n\n        // Rerenders component with latest user input on each keystroke\n        setEnteredText(event.target.value)\n\n    }\n\n\n    return (\n        <form className=\"new-goal\" onSubmit={addGoalButtonHandler}>\n\n            <input\n                onChange={textChangedHandler}\n                value={enteredText}\n                type=\"text\" />\n            <button type=\"submit\"> Add Goal </button>\n\n        </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}