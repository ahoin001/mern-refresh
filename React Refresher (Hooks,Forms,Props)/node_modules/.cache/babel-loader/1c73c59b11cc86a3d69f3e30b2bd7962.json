{"ast":null,"code":"import _slicedToArray from \"/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/src/App.js\";\n// useState to have access to hooks \n//  They let you use state and other React features without writing a class.\nimport React, { useState } from 'react';\nimport GoalList from './components/GoalList/GoalList';\nimport { NewGoal } from \"./components/NewGoal/NewGoal\";\nimport './App.css';\n\nconst App = () => {\n  // first constant holds state snapshot\n  // second constant is function to manipulate state\n  const _useState = useState([{\n    id: 'g1',\n    task: 'Understand React Workflow'\n  }, {\n    id: 'g2',\n    task: 'Understand Express Node workflow'\n  }, {\n    id: 'g3',\n    task: 'Be able to create MERN App'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        courseGoals = _useState2[0],\n        setCourseGoals = _useState2[1]; // Recieves goal object, then creates new array to replace state\n\n\n  const addNewGoalHandler = newGoal => {\n    // SetCourse Goals wants a new array to be returned, to use and replace old array\n    // concat will return new array,\n    // could not use push because push modifies exsisting array\n    setCourseGoals(courseGoals.concat(newGoal));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"course-goals\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Course Goals\"), React.createElement(NewGoal, {\n    onAddGoal: addNewGoalHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(GoalList, {\n    List: courseGoals,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alexanderhoinville/Desktop/react-refresher-01-react-starting-project/src/App.js"],"names":["React","useState","GoalList","NewGoal","App","id","task","courseGoals","setCourseGoals","addNewGoalHandler","newGoal","concat"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB;AACA;AAHgB,oBAIsBH,QAAQ,CAAC,CAC7C;AAAEI,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAD6C,EAE7C;AAAED,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAF6C,EAG7C;AAAED,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAH6C,CAAD,CAJ9B;AAAA;AAAA,QAITC,WAJS;AAAA,QAIIC,cAJJ,kBAUhB;;;AACA,QAAMC,iBAAiB,GAAGC,OAAO,IAAI;AAEnC;AACA;AACA;AACAF,IAAAA,cAAc,CAACD,WAAW,CAACI,MAAZ,CAAmBD,OAAnB,CAAD,CAAd;AAED,GAPD;;AAUA,SAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAED,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF;AAcD,CAnCD;;AAqCA,eAAeH,GAAf","sourcesContent":["// useState to have access to hooks \n//  They let you use state and other React features without writing a class.\nimport React, { useState } from 'react';\nimport GoalList from './components/GoalList/GoalList'\nimport { NewGoal } from \"./components/NewGoal/NewGoal\";\n\nimport './App.css'\n\nconst App = () => {\n\n  // first constant holds state snapshot\n  // second constant is function to manipulate state\n  const [courseGoals, setCourseGoals] = useState([\n    { id: 'g1', task: 'Understand React Workflow' },\n    { id: 'g2', task: 'Understand Express Node workflow' },\n    { id: 'g3', task: 'Be able to create MERN App' }\n  ])\n\n  // Recieves goal object, then creates new array to replace state\n  const addNewGoalHandler = newGoal => {\n\n    // SetCourse Goals wants a new array to be returned, to use and replace old array\n    // concat will return new array,\n    // could not use push because push modifies exsisting array\n    setCourseGoals(courseGoals.concat(newGoal))\n\n  }\n\n\n  return (\n\n    <div className=\"course-goals\">\n\n      <h2>Course Goals</h2>\n\n      {/* onAddGoal is naming convention but could be anything (Write nice code alex) */}\n      <NewGoal onAddGoal={addNewGoalHandler} />\n      <GoalList List={courseGoals} />\n\n    </div>\n\n  )\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}